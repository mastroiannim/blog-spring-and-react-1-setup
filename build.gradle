plugins {
    id "java"
    id "org.springframework.boot" version "2.2.0.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    //id "com.moowork.node" version "1.3.1" //not for gradle 6
    id "com.github.node-gradle.node" version "2.0.0" //nodejs for gradle 6
}

group = 'com.andrew_flower.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '13'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok' //for VS Code add extension

    // https://mvnrepository.com/artifact/com.google.api-client/google-api-client
	compile group: 'com.google.api-client', name: 'google-api-client', version: '1.25.0'

	// https://mvnrepository.com/artifact/com.google.apis/google-api-services-youtube
	compile group: 'com.google.apis', name: 'google-api-services-youtube', version: 'v3-rev212-1.25.0'

	compile group: 'com.google.apis', name: 'google-api-services-youtubeAnalytics', version: 'v1-rev14-1.13.2-beta'

	// https://mvnrepository.com/artifact/com.google.apis/google-api-services-youtubereporting
	compile group: 'com.google.apis', name: 'google-api-services-youtubereporting', version: 'v1-rev1-1.20.0'

	// https://mvnrepository.com/artifact/com.google.oauth-client/google-oauth-client-jetty
	compile("com.google.oauth-client:google-oauth-client-jetty:1.25.0") {
		exclude group: 'org.mortbay.jetty', module: 'servlet-api'
	}
    // https://mvnrepository.com/artifact/com.google.http-client/google-http-client-jackson2
	compile group: 'com.google.http-client', name: 'google-http-client-jackson2', version: '1.25.0'

	// https://mvnrepository.com/artifact/com.google.collections/google-collections
	compile group: 'com.google.collections', name: 'google-collections', version: '1.0'
}

task buildReactApp(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/webpack/bin/webpack.js')
    args = [
            '--mode', 'development',
            '--entry', "${rootDir}/src/main/webapp/javascript/Main.jsx",
            '-o', "${rootDir}/src/main/resources/static/dist/react-app.js"
    ]
}

processResources.dependsOn 'buildReactApp'

clean.doFirst {
    delete "${rootDir}/node_modules/"
    println "${rootDir}/node_modules/"
    delete "${rootDir}/src/main/resources/static/dist/"
    println "${rootDir}/src/main/resources/static/dist/"
}

// https://dzone.com/articles/integrating-java-and-npm-builds-using-gradle
node {
    /* gradle-node-plugin configuration
       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
plugins {
    id "java"
    id "org.springframework.boot" version "2.1.6.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "com.moowork.node" version "1.3.1"
}

group = 'com.andrew_flower.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok' //for VS Code add extension
}

task buildReactApp(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/webpack/bin/webpack.js')
    args = [
            '--mode', 'development',
            '--entry', "${rootDir}/src/main/webapp/javascript/Main.jsx",
            '-o', "${rootDir}/src/main/resources/static/dist/react-app.js"
    ]
}

processResources.dependsOn 'buildReactApp'

clean.doFirst {
    delete "${rootDir}/node_modules/"
    println "${rootDir}/node_modules/"
    delete "${rootDir}/src/main/resources/static/dist/"
    println "${rootDir}/src/main/resources/static/dist/"
}

// https://dzone.com/articles/integrating-java-and-npm-builds-using-gradle
node {
    /* gradle-node-plugin configuration
       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true
}
